{"ast":null,"code":"var _jsxFileName = \"/Users/rikkikendall/Web Development/fence4thefight/src/Components/AnimatedNumber.jsx\";\nimport React, { Component } from 'react';\n\nclass AnimatedNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: 0\n    };\n  }\n\n  fetchPrice() {\n    this.setState({\n      price: Math.floor(Math.random() * 100) + 1\n    });\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchPrice();\n    }, 2000);\n  }\n\n  round(value) {\n    if (value) {\n      return parseFloat(Math.round(value * 100) / 100).toFixed(2);\n    }\n\n    return 0;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Animated Number Below: \"), React.createElement(\"h1\", {\n      className: \"App-Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(AnimatedNumber, {\n      component: \"text\",\n      value: this.state.price,\n      style: {\n        transition: '0.8s ease-out',\n        fontSize: 48,\n        transitionProperty: 'background-color, color, opacity'\n      },\n      frameStyle: perc => perc === 100 ? {} : {\n        backgroundColor: '#ffeb3b'\n      },\n      duration: 300,\n      formatValue: n => this.round(n),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnimatedNumber;\nexport { AnimatedNumber };","map":{"version":3,"sources":["/Users/rikkikendall/Web Development/fence4thefight/src/Components/AnimatedNumber.jsx"],"names":["React","Component","AnimatedNumber","constructor","props","state","price","fetchPrice","setState","Math","floor","random","componentDidMount","setInterval","round","value","parseFloat","toFixed","render","transition","fontSize","transitionProperty","perc","backgroundColor","n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AACDC,EAAAA,UAAU,GAAG;AACX,SAAKC,QAAL,CAAc;AACZF,MAAAA,KAAK,EAAEG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC;AAD7B,KAAd;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKN,UAAL;AACD,KAFU,EAER,IAFQ,CAAX;AAGD;;AACDO,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACX,QAAIA,KAAJ,EAAW;AACT,aAAOC,UAAU,CAACP,IAAI,CAACK,KAAL,CAAWC,KAAK,GAAG,GAAnB,IAA0B,GAA3B,CAAV,CAA0CE,OAA1C,CAAkD,CAAlD,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAC,MAA1B;AAAiC,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAnD;AACI,MAAA,KAAK,EAAE;AACHa,QAAAA,UAAU,EAAE,eADT;AAEHC,QAAAA,QAAQ,EAAE,EAFP;AAGHC,QAAAA,kBAAkB,EACd;AAJD,OADX;AAOI,MAAA,UAAU,EAAEC,IAAI,IACZA,IAAI,KAAK,GAAT,GAAe,EAAf,GAAoB;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAR5B;AAUI,MAAA,QAAQ,EAAE,GAVd;AAWI,MAAA,WAAW,EAAEC,CAAC,IAAI,KAAKV,KAAL,CAAWU,CAAX,CAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF;AAmBD;;AA3CoC;;AA8CvC,eAAetB,cAAf;AAEA,SACEA,cADF","sourcesContent":["import React, { Component } from 'react';\n\nclass AnimatedNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: 0\n    };\n  }\n  fetchPrice() {\n    this.setState({\n      price: Math.floor(Math.random() * 100) + 1\n    })\n  }\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchPrice();\n    }, 2000);\n  }\n  round(value) {\n    if (value) {\n      return parseFloat(Math.round(value * 100) / 100).toFixed(2);\n    }\n    return 0;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n          <p> Animated Number Below: </p>\n          <h1 className=\"App-Title\">\n            <AnimatedNumber component=\"text\" value={this.state.price}\n                style={{\n                    transition: '0.8s ease-out',\n                    fontSize: 48,\n                    transitionProperty:\n                        'background-color, color, opacity'\n                }}\n                frameStyle={perc => (\n                    perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n                )}\n                duration={300}\n                formatValue={n => this.round(n)}/>\n          </h1>\n      </div>\n    );\n  }\n}\n\nexport default AnimatedNumber;\n\nexport {\n  AnimatedNumber,\n};\n"]},"metadata":{},"sourceType":"module"}